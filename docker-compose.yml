version: "3.7"

volumes:
  kong_data_telemetry: {}
  
networks:
 kong-net:
    driver: bridge
    ipam:
     config:
      - subnet: 172.26.0.0/24
        gateway: 172.26.0.10

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    volumes:
      - kong_data_telemetry:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
       kong-net:
         ipv4_address: 172.26.0.1

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    build: .
    command: kong migrations up
    networks:
       kong-net:
         ipv4_address: 172.26.0.2
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    build: .
    restart: on-failure
    networks:
       kong-net:
         ipv4_address: 172.26.0.3
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_LOG_LEVEL: debug
      KONG_OPENTELEMETRY_TRACING: all
      KONG_OPENTELEMETRY_TRACING_SAMPLING_RATE: 1.0
      KONG_COLLECTOR_OTLP_ENABLED: true
      KONG_OPENTRACING_COLLECTOR_URL: http://apm-server:8200
      #KONG_PLUGINS: bundled,opentelemetryCustom
      
    depends_on:
      - kong-database
    ports:
      - "8010:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"


  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
       kong-net:
         ipv4_address: 172.26.0.4
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
       kong-net:
         ipv4_address: 172.26.0.5 
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    networks:
       kong-net:
         ipv4_address: 172.26.0.8 
    environment:
      - node.name=elasticsearch
      - cluster.name=apm
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    expose:
      - 9200

    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601
    ports:
      - "5601:5601"
    networks:
       kong-net:
         ipv4_address: 172.26.0.6

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.9.2
    command: >
      apm-server -e
          -E apm-server.rum.enabled=true
          -E setup.kibana.host=kibana:5601
          -E setup.template.settings.index.number_of_replicas=0
          -E apm-server.kibana.enabled=true
          -E apm-server.kibana.host=kibana:5601
          -E output.elasticsearch.hosts=["elasticsearch:9200"]
          -d "*"
    ports:
      - "8200:8200"
    networks:
       kong-net:
         ipv4_address: 172.26.0.7
